from sklearn.model_selection import GridSearchCV
parameters = {'nthread':[4], #when use hyperthread, xgboost may become slower
              'objective':['binary:logistic'],
              'learning_rate': [0.01,0.02,0.03,0.04,0.05], #so called `eta` value
              'max_depth': [6,5,4,3,2],
              'min_child_weight': [1,2,3,4,5,6,7,8,9,10,11],
              'silent': [1],
              'subsample': [0.7,0.5,0.9,0.6,0.8,1.0],
              'colsample_bytree': [0.7,0.5,0.6,0.8,0.9,1.0],
              'n_estimators': [5,10,20,30,40,60,100], #number of trees, change it to 1000 for better results
              'missing':[0],
              'seed': [0,1,2,3,4,5,6,7,8,9,10],
              'gamma':[0,0.1,0.2],
              'reg_alpha':[0, 0.001, 0.005, 0.01, 0.05]}
grid_search = GridSearchCV(estimator = classifier,
                           param_grid = parameters,
                           scoring = 'accuracy',
                           cv = 10,
                           n_jobs = 1)
grid_search.fit(X_train, y_train)
best_accuracy = grid_search.best_score_
best_parameters = grid_search.best_params_
print("Best Accuracy: {:.2f} %".format(best_accuracy*100))
print("Best Parameters:", best_parameters)
